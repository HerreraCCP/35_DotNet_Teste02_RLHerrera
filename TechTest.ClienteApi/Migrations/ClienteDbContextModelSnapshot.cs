// <auto-generated />
using System;
using ClienteApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClienteApi.Migrations
{
    [DbContext(typeof(ClienteDbContext))]
    partial class ClienteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClienteApi.Models.Archive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("Notes");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_File_Archive")
                        .IsUnique();

                    b.ToTable("Archive");
                });

            modelBuilder.Entity("ClienteApi.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("NVARCHAR(155)")
                        .HasColumnName("BarCode");

                    b.Property<DateTime>("CreatedIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2022, 8, 23, 12, 25, 47, 152, DateTimeKind.Utc).AddTicks(2336))
                        .HasColumnName("CreatedIn");

                    b.Property<int?>("ExpenseDescriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireIn")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpireIn");

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("Notes");

                    b.Property<int?>("TypeOfAccommodationId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeOfLocationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseDescriptionId");

                    b.HasIndex("TypeOfAccommodationId");

                    b.HasIndex("TypeOfLocationId");

                    b.HasIndex(new[] { "Id" }, "IX_BarCode_Expense")
                        .IsUnique();

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("ClienteApi.Models.ExpenseDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionOfExpensive")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("DescriptionOfExpensive");

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("Notes");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_ExpenseDescription_DescriptionOfExpensive")
                        .IsUnique();

                    b.ToTable("ExpenseDescription");
                });

            modelBuilder.Entity("ClienteApi.Models.TypeOfAccommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionOfAccommodation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("DescriptionOfAccommodation");

                    b.Property<string>("Notes")
                        .HasMaxLength(155)
                        .HasColumnType("NVARCHAR(155)")
                        .HasColumnName("Notes");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_TypeOfAccommodation_DescriptionOfAccommodation")
                        .IsUnique();

                    b.ToTable("TypeOfAccommodation");
                });

            modelBuilder.Entity("ClienteApi.Models.TypeOfLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionOfLocation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)")
                        .HasColumnName("DescriptionOfLocation");

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("Notes");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_TypeOfLocation_DescriptionOfLocation")
                        .IsUnique();

                    b.ToTable("TypeOfLocation");
                });

            modelBuilder.Entity("ClienteApi.Models.Expense", b =>
                {
                    b.HasOne("ClienteApi.Models.ExpenseDescription", "ExpenseDescription")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseDescriptionId")
                        .HasConstraintName("FK_Expenses_ExpenseDescription")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClienteApi.Models.TypeOfAccommodation", "TypeOfAccommodation")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeOfAccommodationId")
                        .HasConstraintName("FK_Expenses_TypeOfAccommodation")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClienteApi.Models.TypeOfLocation", "TypeOfLocation")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeOfLocationId")
                        .HasConstraintName("FK_Expenses_TypeOfLocation")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ExpenseDescription");

                    b.Navigation("TypeOfAccommodation");

                    b.Navigation("TypeOfLocation");
                });

            modelBuilder.Entity("ClienteApi.Models.ExpenseDescription", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ClienteApi.Models.TypeOfAccommodation", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ClienteApi.Models.TypeOfLocation", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
